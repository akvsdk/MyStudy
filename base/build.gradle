apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion = AndroidVersions.compileSdkVersion
    buildToolsVersion = AndroidVersions.buildToolsVersion

    defaultConfig {
        minSdkVersion(AndroidVersions.minSdkVersiosn)
        targetSdkVersion(AndroidVersions.targetSdkVersion)
        versionCode(AndroidVersions.versionCode)
        versionName(AndroidVersions.versionName)
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.3'
        languageVersion = '1.3'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //api"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api(Libs.kotlinx_coroutines_core)
    api(Libs.core_ktx)
    api(Libs.multidex)
    api(Libs.lifecycle_extensions)
    api(Libs.appcompat)
    api(Libs.material)
    api(Libs.constraintlayout)
    api(Libs.recyclerview)
    api(Libs.lifecycle_livedata_ktx)
    api(Libs.lifecycle_viewmodel_ktx)

    api(Libs.glide)
//    kapt(Libs.com_github_bumptech_glide_compiler)
    api(Libs.okhttp3_integration)

    api(Libs.okhttp)
    api(Libs.logging_interceptor)
    api(Libs.okhttp_urlconnection)

    api(Libs.retrofit)
    api(Libs.converter_gson)
    api(Libs.saf_log)
    api(Libs.progressmanager)
}


